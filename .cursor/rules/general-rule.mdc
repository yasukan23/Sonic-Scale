---
description: 
globs: 
alwaysApply: true
---

# プロジェクトの目的

## 成果物

- このプロジェクトではドキュメントを作成します。
- 成果物はMarkdown形式とします。

## 作図

- わかりやすいドキュメントとするために図を多様してください。
- 作成する図の拡張子は.drawio.svgとします。
- drawioで編集し直接Markdownに表示できるようにします。

### 図解の活用

- 各セクションに .drawio.svg 形式の図を配置
- 複雑な概念や関係性を視覚的に説明

## 段階的な情報提供

- 基本的な概念から応用的なトピックへと段階的に進む構成
- 初学者でも理解しやすい流れを意識

## 実践的な内容

- 理論だけでなく、具体的な事例や実践方法を含む
- 成功・失敗の両面から学べる構成

## ファイル構成

- ルートフォルダ直下にREADME.mdを作成し、プロジェクト全体の概要と各ドキュメントへのリンクを記載する
- 各ドキュメントはdocフォルダ以下に配置し、階層的な構造にはしない
- docフォルダ以下のドキュメントはMarkdown形式とし、「<<章番号>>.<<タイトル>>.md」というファイル名にする
- docフォルダ以下の各ドキュメントは、それ自体で完結し、独立して読めるように構成する
- draw.ioで作成した図はdraw.ioフォルダ以下に配置し、階層的な構造にはしない
- draw.io以外の図はimgフォルダ以下に配置し、階層的な構造にはしない
- リポジトリ内のファイルを参照する場合は相対パスを使用する

### 例

/
├── README.md
├── doc/
│   ├── 1.はじめに.md                  # プロジェクトの目的と概要
│   ├── 2.プロセスとは.md              # プロセスの説明
│   ├── 3.アジャイル開発の原則          # アジャイル開発の12の原則
│   └── 4.大規模プロジェクトへの適用    # 想定読者と前提知識
│
├── drqw.io/
│   ├── agile-workflow.drawio.svg     # アジャイルワークフローの図解
│   ├── team-topology.drawio.svg      # チーム構成図
│   └── organization.drawio.svg       # 組織構造の図解
│
└── img/
    ├── challenges.png                 # 大規模開発での課題
    ├── solutions.png                  # 課題への対応策
    └── dashboard.png                  # ダッシュボード例の図解